# requirements.txt dosyasını oku
pkgs <- readLines("C:\Users\samet\OneDrive\Belgeler\EnformaticsTask\requirement.txt")
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
library(readr)
data <- read_tsv("assesment_dataset.tsv")
data
converter <- read_tsv("converter.tsv")
converter
View(data)
View(converter)
?factor
library(DESeq2)
library(DESeq2)
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
data <- read_tsv("assesment_dataset.tsv")
data
converter <- read_tsv("converter.tsv")
converter
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
# Gerekli kütüphaneler
library(DESeq2)
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
# Gerekli kütüphaneler
library(DESeq2)
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
data <- read_tsv("assesment_dataset.tsv")
data
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
print(data)
data <- read_tsv("assesment_dataset.tsv")
data <- read_tsv("assesment_dataset.tsv")
print(data)
converter <- read_tsv("converter.tsv")
converter
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("C:\Users\samet\OneDrive\Belgeler\EnformaticsTask\assesment_dataset.tsv")
# requirements.txt dosyasını oku
pkgs <- readLines("C:\\Users\\samet\\OneDrive\\Belgeler\\EnformaticsTask\\requirement.txt")
pkgs
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Paketlerin hangileri Bioconductor'dan olduğunu belirt
bioc_pkgs <- c("DESeq2", "airway", "org.Hs.eg.db", "clusterProfiler", "AnnotationDbi", "biomaRt", "pathview")
# Paketleri sırayla kontrol ederek yükle
for (pkg in pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% bioc_pkgs) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
} else {
message(paste(pkg, "zaten yüklü."))
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
library(readr)
data <- read_tsv("assesment_dataset.tsv")
print(data)
converter <- read_tsv("converter.tsv")
converter
# Gerekli kütüphaneler
library(DESeq2)
# Gerekli kütüphaneler
library(DESeq2)
# BiocManager yoksa yükle
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# CRAN'dan gelenler
cran_pkgs <- c("tidyverse", "enrichplot", "readr", "EnhancedVolcano")
for (pkg in cran_pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
}
# Bioconductor'dan gelenler
bioc_pkgs <- c("DESeq2", "clusterProfiler", "org.Hs.eg.db", "AnnotationDbi", "pathview")
for (pkg in bioc_pkgs) {
if (!requireNamespace(pkg, quietly = TRUE)) {
BiocManager::install(pkg)
}
}
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnhancedVolcano")
# Gerekli kütüphaneler
library(DESeq2)
library(tidyverse)
library(clusterProfiler)
library(org.Hs.eg.db)  # İnsan verisi için
library(AnnotationDbi)
library(enrichplot)
library(pathview)
library(EnhancedVolcano)
library(readr)
data <- read_tsv("assesment_dataset.tsv")
print(data)
converter <- read_tsv("converter.tsv")
converter
